<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA1hJREFUWEet
        lrtuE0EUhjcNDTUNDQ0FBQ0SDQU9BSUddQokRIGExBMgISFR8AKIhpZHoEEIoUS5IjuxHRsZbAvfHdsR
        9no53+RfY8feSxJ/0mp3/jmzM7vnzJnjpWVra+tOs9EsjEYjP4hgbDTq9Ty2GnZ5Dg8PX9qkY80RTCaT
        4K/R7XYbrVarxMUzmkwc1hzncrkXes352dzcvH4yHJ7ofUG71ars7OzcU3ck29vb99vtdlXDguFwOLB3
        XVN3Ouyrn2t8wBfabU1dqdnb27tiCymfviUIcge5Z+qKJ5/Pv2UAvzqTyTyWfGGy2ey6W4FRKBTeSF5O
        +OU2+cR+2w3Jl2ZjY+Om75/Gri3oqeR58LkmD1Y5eQiLcCswlsZEGHCr+O1RhO4YGJJOYavRQcBJSqRW
        q32zbe9zVavVr5ITYTcxF+6W5Hkz+zxVtPf7/R7GuIsLjo+PO+qOhd2Bvc05csLu7u5dBFbmhARILs6+
        2fwpybPt9gsts7//RFIsnXbnD/aWM257pFcaaZIMWKrNYU/QSiKAb6DV6/UfkmKxiR9g32g0Dvj9Pr9R
        fYmUy+VPDC6VSu8lecVi8aO0D5ISwR7XuwfyuPREzHwt9Huv12va1eJZ+zx1xiQGGOAWwGEiPRXEDatn
        LPAy589zQNAy1i3gPNtvVVjg/r7wAkrF4juSiT/2J1zDwaDPGaLuVMwtIK0L2Cnm62lBwuNMk4LExz0y
        j2XOBWmCkMmxhWql8tlu04DjuVKpfHGdRpqKaBqEtmoXTNIjCb/cvvChpAUsyz3Chj8hKRLsCGQSS54G
        lYz6FsDn2PDlkiKxM+I7tkf5o1eSFuAjsLHElXXFJg3KKPUvQMBhYyTuc2ww5LyQtIDljjo25tZbTqCA
        ROCgcMIZXLSbB9RMhESFy9Scw/70VeYiBiTNHDBWw0mao9lslnCVmonE2Xc7nRpzLVRGVK/qWJe0cihM
        mcM82pf0H8okOoHySfLKwN96/fKSDMIV4u9VLoLJtYuTawZKZ2dprMId4UeBpevXkuMhQDTGVUpRuyMO
        oj0MOEhbLU3BTzP7P6CMopJRdyQkmXCfAwEX6fM0UL2GeTuENocJJxoXz8tsFrbaZaDgoIaz904LkbPQ
        R3qdZrhEPO8f4Kivz061P1AAAAAASUVORK5CYII=
</value>
  </data>
  <data name="Close_Button.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAMJJREFUSEvt
        kkEOwiAQRfEOXrkuNXHXeCcPQwKUENT/I2NMatuREjf2bVqmM+8TqNn4Q2KM1/uTXSkt4r3vOWCt3ZfS
        POjNHACLISGECxtzzqGUdHCGg2AypFouYPZGARiFrJYLcIxCmskFuF4huNAzX5rJBTglpL2cyK9YUP/C
        KkTOneMxefFVQH6i7f1YsGwTAvmRlk9njvK6kDm5gM91IRq5gLbvQpxzB3Zr5ALa9SEI6FJKtizVYEOD
        KmDjxxjzAETJN1J3jfkpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="loginImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>